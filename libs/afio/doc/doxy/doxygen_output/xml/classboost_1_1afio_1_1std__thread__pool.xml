<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classboost_1_1afio_1_1std__thread__pool" kind="class" prot="public">
    <compoundname>boost::afio::std_thread_pool</compoundname>
    <basecompoundref refid="classboost_1_1afio_1_1thread__source" prot="public" virt="non-virtual">boost::afio::thread_source</basecompoundref>
    <includes refid="afio_8hpp" local="no">afio.hpp</includes>
    <innerclass refid="classboost_1_1afio_1_1std__thread__pool_1_1worker" prot="private">boost::afio::std_thread_pool::worker</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classboost_1_1afio_1_1std__thread__pool_1a4636d2eabf003b9aa517f234ac288a6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class worker</definition>
        <argsstring></argsstring>
        <name>worker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="307" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1afio_1_1std__thread__pool_1a7141bef92433fa254addc3bdbdad75db" prot="private" static="no" mutable="no">
        <type>asio::io_service</type>
        <definition>asio::io_service boost::afio::std_thread_pool::service</definition>
        <argsstring></argsstring>
        <name>service</name>
        <reimplements refid="classboost_1_1afio_1_1thread__source_1a5fdcd41e6740f6475b9dee8b372c4347">service</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="309" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1afio_1_1std__thread__pool_1aafdedbf944e3afcb91c1a78f1279f32f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; asio::io_service::work &gt;</type>
        <definition>std::unique_ptr&lt;asio::io_service::work&gt; boost::afio::std_thread_pool::working</definition>
        <argsstring></argsstring>
        <name>working</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="310" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1afio_1_1std__thread__pool_1a287fb09e68b2e532d1ef4203c7837904" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; thread &gt; &gt;</type>
        <definition>std::vector&lt; std::unique_ptr&lt;thread&gt; &gt; boost::afio::std_thread_pool::workers</definition>
        <argsstring></argsstring>
        <name>workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="311" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1afio_1_1std__thread__pool_1a72d432ab800834bf9a56ff47926fcf98" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::std_thread_pool::std_thread_pool</definition>
        <argsstring>(size_t no)</argsstring>
        <name>std_thread_pool</name>
        <param>
          <type>size_t</type>
          <declname>no</declname>
        </param>
        <briefdescription>
<para>Constructs a thread pool of <emphasis>no</emphasis> workers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>no</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of worker threads to create </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="317" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1std__thread__pool_1ad62be906b50a92faabb3c67671ce6c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::afio::std_thread_pool::add_workers</definition>
        <argsstring>(size_t no)</argsstring>
        <name>add_workers</name>
        <param>
          <type>size_t</type>
          <declname>no</declname>
        </param>
        <briefdescription>
<para>Adds more workers to the thread pool. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>no</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of worker threads to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="322" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="321" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1std__thread__pool_1a703f44e4e256c011c36efeea68b068be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::afio::std_thread_pool::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
<para>Destroys the thread pool, waiting for worker threads to exit beforehand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="329" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="328" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1std__thread__pool_1a3d17432aadedb1c243f28ef119675f2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::std_thread_pool::~std_thread_pool</definition>
        <argsstring>()</argsstring>
        <name>~std_thread_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="344" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1thread__source_1ab1ad9150c265b69e72f92f0d70caf0b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>asio::io_service &amp;</type>
        <definition>asio::io_service&amp; boost::afio::thread_source::io_service</definition>
        <argsstring>()</argsstring>
        <name>io_service</name>
        <briefdescription>
<para>Returns the underlying io_service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="266" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1thread__source_1af6a0b8aa8cf5e0f02caae57c5065360e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class R</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::afio::thread_source::enqueue</definition>
        <argsstring>(enqueued_task&lt; R &gt; task)</argsstring>
        <name>enqueue</name>
        <param>
          <type><ref refid="classenqueued__task" kindref="compound">enqueued_task</ref>&lt; R &gt;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Sends a task to the thread pool for execution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class R</parametername>
</parameternamelist>
<parameterdescription>
<para>The return type of the enqueued task </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="269" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1thread__source_1aaa3076b99fb48ad27f50c4446c987603" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>shared_future&lt; typename std::result_of&lt; F()&gt;::type &gt;</type>
        <definition>shared_future&lt;typename std::result_of&lt;F()&gt;::type&gt; boost::afio::thread_source::enqueue</definition>
        <argsstring>(F f)</argsstring>
        <name>enqueue</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Sends some callable entity to the thread pool for execution. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An enqueued task for the enqueued callable </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class F</parametername>
</parameternamelist>
<parameterdescription>
<para>Any callable type with signature R(void) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Any instance of a callable type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="274" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="273" bodyend="280"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A very simple thread pool based on std::thread or boost::thread. </para>    </briefdescription>
    <detaileddescription>
<para>This instantiates a `asio::io_service` and a latchable `asio::io_service::work` to keep any threads working until the instance is destructed. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="130">
        <label>boost::afio::thread_source</label>
        <link refid="classboost_1_1afio_1_1thread__source"/>
      </node>
      <node id="129">
        <label>boost::afio::std_thread_pool</label>
        <link refid="classboost_1_1afio_1_1std__thread__pool"/>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="132">
        <label>boost::afio::thread_source</label>
        <link refid="classboost_1_1afio_1_1thread__source"/>
      </node>
      <node id="131">
        <label>boost::afio::std_thread_pool</label>
        <link refid="classboost_1_1afio_1_1std__thread__pool"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="288" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="288" bodyend="347"/>
    <listofallmembers>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1ad62be906b50a92faabb3c67671ce6c84" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>add_workers</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a703f44e4e256c011c36efeea68b068be" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>destroy</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1af6a0b8aa8cf5e0f02caae57c5065360e" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>enqueue</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1aaa3076b99fb48ad27f50c4446c987603" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>enqueue</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1ab1ad9150c265b69e72f92f0d70caf0b9" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>io_service</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1a7b1592f5c309f5315d7f5d1c550c6389" prot="protected" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>operator=</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a7141bef92433fa254addc3bdbdad75db" prot="private" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>service</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a72d432ab800834bf9a56ff47926fcf98" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>std_thread_pool</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1af8d987d7614898676e04d889336079ac" prot="protected" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>thread_source</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a4636d2eabf003b9aa517f234ac288a6c" prot="private" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>worker</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a287fb09e68b2e532d1ef4203c7837904" prot="private" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>workers</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1aafdedbf944e3afcb91c1a78f1279f32f" prot="private" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>working</name></member>
      <member refid="classboost_1_1afio_1_1std__thread__pool_1a3d17432aadedb1c243f28ef119675f2a" prot="public" virt="non-virtual"><scope>boost::afio::std_thread_pool</scope><name>~std_thread_pool</name></member>
      <member refid="classboost_1_1afio_1_1thread__source_1ac35076fafc379b7112bd4842be6f9925" prot="protected" virt="virtual"><scope>boost::afio::std_thread_pool</scope><name>~thread_source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
