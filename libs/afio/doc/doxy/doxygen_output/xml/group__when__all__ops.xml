<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="group__when__all__ops" kind="group">
    <compoundname>when_all_ops</compoundname>
    <title>x</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__when__all__ops_1gadd8ae93c91c23b1011dfdf002db07e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>detail::enable_if_async_op&lt; true, typename Iterator::value_type &gt;::type</type>
        <definition>detail::enable_if_async_op&lt;true, typename Iterator::value_type&gt;::type boost::afio::when_all</definition>
        <argsstring>(std::nothrow_t _, Iterator first, Iterator last)</argsstring>
        <name>when_all</name>
        <param>
          <type>std::nothrow_t</type>
          <declname>_</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Returns a result when all the supplied ops complete. Does not propagate exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of std::nothrow_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing to the first <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing after the last <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> iterator batch of ops not exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="1922" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="1921" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga85c6d5c463b1ecffdc2a6bda4f040bb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>detail::enable_if_async_op&lt; false, typename Iterator::value_type &gt;::type</type>
        <definition>detail::enable_if_async_op&lt;false, typename Iterator::value_type&gt;::type boost::afio::when_any</definition>
        <argsstring>(std::nothrow_t _, Iterator first, Iterator last)</argsstring>
        <name>when_any</name>
        <param>
          <type>std::nothrow_t</type>
          <declname>_</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Returns a result when any the supplied ops complete. Does not propagate exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of std::nothrow_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing to the first <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing after the last <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> iterator batch of ops not exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="1940" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="1939" bodyend="1944"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga5598f81e0788f6acd2258263009de875" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::vector&lt; std::shared_ptr&lt; async_io_handle &gt; &gt; &gt;</type>
        <definition>future&lt;std::vector&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; &gt; boost::afio::when_all</definition>
        <argsstring>(std::nothrow_t _, std::vector&lt; async_io_op &gt; ops)</argsstring>
        <name>when_all</name>
        <param>
          <type>std::nothrow_t</type>
          <declname>_</declname>
        </param>
        <param>
          <type>std::vector&lt; async_io_op &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Returns a result when all the supplied ops complete. Does not propagate exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of std::nothrow_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of the async_io_ops to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> vector batch of ops not exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="1956" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="1955" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1gaeb4173eee90e57cc0646056bd14603de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::shared_ptr&lt; async_io_handle &gt; &gt;</type>
        <definition>future&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; boost::afio::when_any</definition>
        <argsstring>(std::nothrow_t _, std::vector&lt; async_io_op &gt; ops)</argsstring>
        <name>when_any</name>
        <param>
          <type>std::nothrow_t</type>
          <declname>_</declname>
        </param>
        <param>
          <type>std::vector&lt; async_io_op &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Returns a result when any the supplied ops complete. Does not propagate exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of std::nothrow_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of the async_io_ops to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> vector batch of ops not exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="1972" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="1971" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1gaaf00f394b0af6575df503d4527788c5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>detail::enable_if_async_op&lt; true, typename Iterator::value_type &gt;::type</type>
        <definition>detail::enable_if_async_op&lt;true, typename Iterator::value_type&gt;::type boost::afio::when_all</definition>
        <argsstring>(Iterator first, Iterator last)</argsstring>
        <name>when_all</name>
        <param>
          <type>Iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Returns a result when all the supplied ops complete. Propagates exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing to the first <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing after the last <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> iterator batch of ops exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="1989" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="1988" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga1a452f7d0c7a0517e824cddb0816e872" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>detail::enable_if_async_op&lt; false, typename Iterator::value_type &gt;::type</type>
        <definition>detail::enable_if_async_op&lt;false, typename Iterator::value_type&gt;::type boost::afio::when_any</definition>
        <argsstring>(Iterator first, Iterator last)</argsstring>
        <name>when_any</name>
        <param>
          <type>Iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Returns a result when any the supplied ops complete. Propagates exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class Iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing to the first <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>An iterator pointing after the last <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> iterator batch of ops exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2006" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2005" bodyend="2010"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga6591b9bbaf576183995ba8612f1c86d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::vector&lt; std::shared_ptr&lt; async_io_handle &gt; &gt; &gt;</type>
        <definition>future&lt;std::vector&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; &gt; boost::afio::when_all</definition>
        <argsstring>(std::vector&lt; async_io_op &gt; ops)</argsstring>
        <name>when_all</name>
        <param>
          <type>std::vector&lt; async_io_op &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Returns a result when all the supplied ops complete. Propagates exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of the async_io_ops to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> vector batch of ops exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2021" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2020" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga4a98962e8807e8f5fa31bb14fa430374" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::shared_ptr&lt; async_io_handle &gt; &gt;</type>
        <definition>future&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; boost::afio::when_any</definition>
        <argsstring>(std::vector&lt; async_io_op &gt; ops)</argsstring>
        <name>when_any</name>
        <param>
          <type>std::vector&lt; async_io_op &gt;</type>
          <declname>ops</declname>
        </param>
        <briefdescription>
<para>Returns a result when any the supplied ops complete. Propagates exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ops</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of the async_io_ops to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> vector batch of ops exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(N).</qbk>   <qbk>[heading Exception Model]Propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2036" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2035" bodyend="2040"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga175bb31dd07b8c716c85f5bfdc17c9df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::vector&lt; std::shared_ptr&lt; async_io_handle &gt; &gt; &gt;</type>
        <definition>future&lt;std::vector&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; &gt; boost::afio::when_all</definition>
        <argsstring>(std::nothrow_t _, async_io_op op)</argsstring>
        <name>when_all</name>
        <param>
          <type>std::nothrow_t</type>
          <declname>_</declname>
        </param>
        <param>
          <type>async_io_op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Returns a result when the supplied op completes. Does not propagate exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of std::nothrow_t. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> convenience single op not exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(1).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2052" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2051" bodyend="2055"/>
      </memberdef>
      <memberdef kind="function" id="group__when__all__ops_1ga3a4b5bc5ed128e7ef337fe164f897782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>future&lt; std::vector&lt; std::shared_ptr&lt; async_io_handle &gt; &gt; &gt;</type>
        <definition>future&lt;std::vector&lt;std::shared_ptr&lt;async_io_handle&gt; &gt; &gt; boost::afio::when_all</definition>
        <argsstring>(async_io_op op)</argsstring>
        <name>when_all</name>
        <param>
          <type>async_io_op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Returns a result when the supplied op completes. Propagates exception states. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A future vector of shared_ptr&apos;s to <ref refid="classboost_1_1afio_1_1async__io__handle" kindref="compound">async_io_handle</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref> to wait upon.</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish> convenience single op exception propagating</qbk.distinguish>   <qbk>[heading Complexity]O(1).</qbk>   <qbk>[heading Exception Model]Non propagating</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2066" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2065" bodyend="2069"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
