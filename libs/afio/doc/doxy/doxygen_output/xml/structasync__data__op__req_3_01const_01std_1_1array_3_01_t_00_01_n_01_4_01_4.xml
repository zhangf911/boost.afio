<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4" kind="struct" prot="public">
    <compoundname>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</compoundname>
    <includes refid="afio_8hpp" local="no">afio.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a99f191975dc73ffb53dcc7d26fe992b5" prot="public" static="no" mutable="no">
        <type><ref refid="structasync__io__op" kindref="compound">async_io_op</ref></type>
        <definition>async_io_op async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::precondition</definition>
        <argsstring></argsstring>
        <name>precondition</name>
        <briefdescription>
<para>A precondition containing an open file handle for this operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2237" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1ae99a2152f6c647d77512167b05c18b3d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; asio::const_buffer &gt;</type>
        <definition>std::vector&lt;asio::const_buffer&gt; async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <briefdescription>
<para>A sequence of const Boost.ASIO buffers to write from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2239" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1af77cca1ba0410f9350d08534f30081d8" prot="public" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::where</definition>
        <argsstring></argsstring>
        <name>where</name>
        <briefdescription>
<para>The offset at which to write. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2241" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>()</argsstring>
        <name>async_data_op_req</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2244" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2244" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a39f2cc7b884f5812ca586bc96ee6c2c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2246" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2246" bodyend="2246"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a63b99d8a9ac63251e4974dad7b5b2a08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) BOOST_NOEXCEPT_OR_NOTHROW</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2248" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2248" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a192d6df315e6d9e8c7a71f8390616396" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::operator=</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2250" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2250" bodyend="2250"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a29bb9526a7589b026b9f0119dc8c203a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::operator=</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) BOOST_NOEXCEPT_OR_NOTHROW</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2252" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2252" bodyend="2252"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a3867065cefffea7aef06ec3e1719b704" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req&lt; std::array&lt; T, N &gt;&gt; &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref>&lt; std::array&lt; T, N &gt;&gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2254" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2254" bodyend="2254"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a8f748d7b94cb78368011a01d409b6d1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req&lt; std::array&lt; T, N &gt;&gt; &amp;&amp;o) BOOST_NOEXCEPT_OR_NOTHROW</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" kindref="member">async_data_op_req</ref>&lt; std::array&lt; T, N &gt;&gt; &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2256" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2256" bodyend="2256"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a2a55626673c70fbd1da12a96bf6962c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_io_op _precondition, const std::array&lt; T, N &gt; &amp;v, off_t _where)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structasync__io__op" kindref="compound">async_io_op</ref></type>
          <declname>_precondition</declname>
        </param>
        <param>
          <type>const std::array&lt; T, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>_where</declname>
        </param>
        <briefdescription>
<para>Constructs an instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_precondition</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional precondition for this operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to memory or reference to object into which to read or write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_where</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset at which to transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2258" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2258" bodyend="2258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A convenience bundle of precondition, data and where for writing from a `const std::array&lt;T, N&gt;`. Data <bold>MUST</bold> stay around until the operation completes. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class T</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Any compile-time size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="11">
        <label>std::vector&lt; asio::const_buffer &gt;</label>
      </node>
      <node id="9">
        <label>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</label>
        <link refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4"/>
        <childnode refid="10" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>async_io_op</label>
        <link refid="structasync__io__op"/>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2234" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2233" bodyend="2259"/>
    <listofallmembers>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a7ed58b855c3121a7bf03564631e7ee51" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a39f2cc7b884f5812ca586bc96ee6c2c0" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a63b99d8a9ac63251e4974dad7b5b2a08" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a3867065cefffea7aef06ec3e1719b704" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a8f748d7b94cb78368011a01d409b6d1b" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a2a55626673c70fbd1da12a96bf6962c6" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1ae99a2152f6c647d77512167b05c18b3d" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>buffers</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a192d6df315e6d9e8c7a71f8390616396" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a29bb9526a7589b026b9f0119dc8c203a" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1a99f191975dc73ffb53dcc7d26fe992b5" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>precondition</name></member>
      <member refid="structasync__data__op__req_3_01const_01std_1_1array_3_01_t_00_01_n_01_4_01_4_1af77cca1ba0410f9350d08534f30081d8" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; const std::array&lt; T, N &gt; &gt;</scope><name>where</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
