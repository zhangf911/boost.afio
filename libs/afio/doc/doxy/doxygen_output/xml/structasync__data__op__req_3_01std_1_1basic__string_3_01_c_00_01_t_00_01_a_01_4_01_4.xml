<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4" kind="struct" prot="public">
    <compoundname>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</compoundname>
    <includes refid="afio_8hpp" local="no">afio.hpp</includes>
    <templateparamlist>
      <param>
        <type>class C</type>
      </param>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a525ee986c7b2201e3d23c653ffa9b8f6" prot="public" static="no" mutable="no">
        <type><ref refid="structasync__io__op" kindref="compound">async_io_op</ref></type>
        <definition>async_io_op async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::precondition</definition>
        <argsstring></argsstring>
        <name>precondition</name>
        <briefdescription>
<para>A precondition containing an open file handle for this operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2369" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acdcaa44cd54feec5300ba413ec450ed9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; asio::mutable_buffer &gt;</type>
        <definition>std::vector&lt;asio::mutable_buffer&gt; async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <briefdescription>
<para>A sequence of mutable Boost.ASIO buffers to read into. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2371" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acfd0a6074f911d2cf3f5e152fef64e9a" prot="public" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::where</definition>
        <argsstring></argsstring>
        <name>where</name>
        <briefdescription>
<para>The offset from which to read. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2373" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>()</argsstring>
        <name>async_data_op_req</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2376" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2376" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a456015d21af288631910efa3498979ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2378" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2378" bodyend="2378"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1abfeadd2c0ae3cc72ecc95f8a7104e85f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) BOOST_NOEXCEPT_OR_NOTHROW</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2380" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2380" bodyend="2380"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1ae093a1705c26004807fa45935070e7c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2382" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2382" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4e409e11c523f5db6ca3835eda85e4fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) BOOST_NOEXCEPT_OR_NOTHROW</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" kindref="member">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2384" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2384" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aaea31ce0a843abb2d4f0442e074e0a06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_io_op _precondition, std::basic_string&lt; C, T, A &gt; &amp;v, off_t _where)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structasync__io__op" kindref="compound">async_io_op</ref></type>
          <declname>_precondition</declname>
        </param>
        <param>
          <type>std::basic_string&lt; C, T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>_where</declname>
        </param>
        <briefdescription>
<para>Constructs an instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_precondition</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional precondition for this operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to memory or reference to object into which to read or write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_where</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset at which to transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2386" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2386" bodyend="2386"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A convenience bundle of precondition, data and where for reading into a `std::basic_string&lt;C, T, A&gt;`. Data <bold>MUST</bold> stay around until the operation completes. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class C</parametername>
</parameternamelist>
<parameterdescription>
<para>Any character type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class T</parametername>
</parameternamelist>
<parameterdescription>
<para>Character traits type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class A</parametername>
</parameternamelist>
<parameterdescription>
<para>Any STL allocator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="39">
        <label>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</label>
        <link refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4"/>
        <childnode refid="40" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::vector&lt; asio::mutable_buffer &gt;</label>
      </node>
      <node id="40">
        <label>async_io_op</label>
        <link refid="structasync__io__op"/>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" line="2366" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/include/boost/afio/afio.hpp" bodystart="2365" bodyend="2387"/>
    <listofallmembers>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b60afc2d284899ab71bb12119ca1ddb" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a456015d21af288631910efa3498979ea" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1abfeadd2c0ae3cc72ecc95f8a7104e85f" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aaea31ce0a843abb2d4f0442e074e0a06" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acdcaa44cd54feec5300ba413ec450ed9" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>buffers</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1ae093a1705c26004807fa45935070e7c7" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4e409e11c523f5db6ca3835eda85e4fc" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a525ee986c7b2201e3d23c653ffa9b8f6" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>precondition</name></member>
      <member refid="structasync__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acfd0a6074f911d2cf3f5e152fef64e9a" prot="public" virt="non-virtual"><scope>async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>where</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
