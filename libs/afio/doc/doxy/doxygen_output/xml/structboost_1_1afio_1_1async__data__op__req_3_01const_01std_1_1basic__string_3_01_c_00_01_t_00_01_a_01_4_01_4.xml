<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4" kind="struct" prot="public">
    <compoundname>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</compoundname>
    <basecompoundref refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4" prot="public" virt="non-virtual">boost::afio::detail::async_data_op_req_impl&lt; true &gt;</basecompoundref>
    <includes refid="afio_8hpp" local="no">afio.hpp</includes>
    <templateparamlist>
      <param>
        <type>class C</type>
      </param>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b42df7a3593ecfbc4982307a35b7294" prot="public" static="no" mutable="no">
        <type><ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref></type>
        <definition>async_io_op boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::precondition</definition>
        <argsstring></argsstring>
        <name>precondition</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a5360608bf8265eb0eb0715ce8b6be479">precondition</reimplements>
        <briefdescription>
<para>A precondition containing an open file handle for this operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2624" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1af65c9a5ca44e5e71ba40c46fbd6db7b3" prot="public" static="no" mutable="no">
        <type>std::vector&lt; asio::const_buffer &gt;</type>
        <definition>std::vector&lt;asio::const_buffer&gt; boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a24bc5634c21ef6201e4d6a5449ebec5a">buffers</reimplements>
        <briefdescription>
<para>A sequence of const Boost.ASIO buffers to write from. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2626" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a3d5820c983d028b7c3ab76716fc3d784" prot="public" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::where</definition>
        <argsstring></argsstring>
        <name>where</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1afa3705cacc7b93d4513f20225c7c3d76">where</reimplements>
        <briefdescription>
<para>The offset at which to write. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2628" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2628" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a84f5ff0b4a29aadf4e73c2a436c05e80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>()</argsstring>
        <name>async_data_op_req</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2631" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2631" bodyend="2631"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aafd627487673ea9d53cce8385fda69ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2633" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2633" bodyend="2633"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa5d380e8ec439c3a1d7e9b2d44d26b57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) noexcept</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2635" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2635" bodyend="2635"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4b2b0d0cac50595f94a546a312d858e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req&lt; std::basic_string&lt; C, T, A &gt;&gt; &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref>&lt; std::basic_string&lt; C, T, A &gt;&gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2637" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2637" bodyend="2637"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acb9ca8677ebad63dd2c289ddc2c34565" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req&lt; std::basic_string&lt; C, T, A &gt;&gt; &amp;&amp;o) noexcept</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref>&lt; std::basic_string&lt; C, T, A &gt;&gt; &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2639" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2639" bodyend="2639"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4195d4eb37d44ffe3683ef486ca2a963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2641" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2641" bodyend="2641"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa036243df783ec2afe233dd821aa5e7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2643" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2643" bodyend="2643"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a6500d3414c73147a0cbd31a304385ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_io_op _precondition, const std::basic_string&lt; C, T, A &gt; &amp;v, off_t _where)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref></type>
          <declname>_precondition</declname>
        </param>
        <param>
          <type>const std::basic_string&lt; C, T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>_where</declname>
        </param>
        <briefdescription>
<para>Constructs an instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_precondition</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional precondition for this operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to memory or reference to object into which to read or write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_where</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset at which to transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2645" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2645" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aefb64535213c4439ca7f472c546b164b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::afio::detail::async_data_op_req_impl&lt; true &gt;::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
<para>Validates contents for correctness. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if contents are correct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2249" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2248" bodyend="2261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A convenience bundle of precondition, data and where for writing from a `const std::basic_string&lt;C, T, A&gt;`. Data <bold>MUST</bold> stay around until the operation completes. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class C</parametername>
</parameternamelist>
<parameterdescription>
<para>Any character type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class T</parametername>
</parameternamelist>
<parameterdescription>
<para>Character traits type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class A</parametername>
</parameternamelist>
<parameterdescription>
<para>Any STL allocator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="29">
        <label>boost::afio::detail::async_data_op_req_impl&lt; true &gt;</label>
        <link refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4"/>
      </node>
      <node id="28">
        <label>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</label>
        <link refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="33">
        <label>boost::afio::async_io_op</label>
        <link refid="structboost_1_1afio_1_1async__io__op"/>
        <childnode refid="34" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::vector&lt; asio::const_buffer &gt;</label>
      </node>
      <node id="31">
        <label>boost::afio::detail::async_data_op_req_impl&lt; true &gt;</label>
        <link refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4"/>
        <childnode refid="32" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>boost::afio::async_file_io_dispatcher_base</label>
        <link refid="classboost_1_1afio_1_1async__file__io__dispatcher__base"/>
      </node>
      <node id="30">
        <label>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</label>
        <link refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2621" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2620" bodyend="2646"/>
    <listofallmembers>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a84f5ff0b4a29aadf4e73c2a436c05e80" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aafd627487673ea9d53cce8385fda69ce" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa5d380e8ec439c3a1d7e9b2d44d26b57" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4b2b0d0cac50595f94a546a312d858e8" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1acb9ca8677ebad63dd2c289ddc2c34565" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a6500d3414c73147a0cbd31a304385ec5" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aadec13f2add68372932a8b26360d98dd" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aef0669fca58b816cbc8b6e36375f062b" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a205a02480c5303822919c1d5883e3691" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a9780163187ac238e67b81f9ea04e2c97" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1ae364c27423a2cd8bb3300fa7732cb276" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1af8da7dede4533395a74fea6faaaeb391" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aab7fb0d133ded6696d4a8a4b8eafd42e" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aa8ab110c45c33fb6fa85ebfb28cbd5c4" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a8a40230853cdf00fcb8e71bfd2bb0cd8" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a702aba20985ed1432ae458601ac24dc2" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a53f54cc7bbde1aa552e1650f69ff2443" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1af65c9a5ca44e5e71ba40c46fbd6db7b3" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>buffers</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a4195d4eb37d44ffe3683ef486ca2a963" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa036243df783ec2afe233dd821aa5e7f" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a360e610764b1147cfedd9c16cdb3866d" prot="public" virt="non-virtual" ambiguityscope="boost::afio::detail::async_data_op_req_impl&lt; true &gt;::"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1a37e91501f1c76de829ef4b2828922d0f" prot="public" virt="non-virtual" ambiguityscope="boost::afio::detail::async_data_op_req_impl&lt; true &gt;::"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a0b42df7a3593ecfbc4982307a35b7294" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>precondition</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01true_01_4_1aefb64535213c4439ca7f472c546b164b" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>validate</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01const_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a3d5820c983d028b7c3ab76716fc3d784" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; const std::basic_string&lt; C, T, A &gt; &gt;</scope><name>where</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
