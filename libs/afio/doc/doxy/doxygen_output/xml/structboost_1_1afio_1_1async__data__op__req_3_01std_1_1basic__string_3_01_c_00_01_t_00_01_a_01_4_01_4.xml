<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4" kind="struct" prot="public">
    <compoundname>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</compoundname>
    <basecompoundref refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4" prot="public" virt="non-virtual">boost::afio::detail::async_data_op_req_impl&lt; false &gt;</basecompoundref>
    <includes refid="afio_8hpp" local="no">afio.hpp</includes>
    <templateparamlist>
      <param>
        <type>class C</type>
      </param>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa57bec75ffaa60187beb806fd9f6cd7b" prot="public" static="no" mutable="no">
        <type><ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref></type>
        <definition>async_io_op boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::precondition</definition>
        <argsstring></argsstring>
        <name>precondition</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a84eefad026fdc25c3b0ec05257100db0">precondition</reimplements>
        <briefdescription>
<para>A precondition containing an open file handle for this operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2600" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a328f95dd2fcb7a270e538bb1dfb7e8ec" prot="public" static="no" mutable="no">
        <type>std::vector&lt; asio::mutable_buffer &gt;</type>
        <definition>std::vector&lt;asio::mutable_buffer&gt; boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::buffers</definition>
        <argsstring></argsstring>
        <name>buffers</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1af4b4d0c54ec2581bed6c0841e5ada0a1">buffers</reimplements>
        <briefdescription>
<para>A sequence of mutable Boost.ASIO buffers to read into. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2602" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a991f001fb9c1a19a9804c51f6896afab" prot="public" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::where</definition>
        <argsstring></argsstring>
        <name>where</name>
        <reimplements refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a58aaf07ba0547ac61cc851ab5b7aed2f">where</reimplements>
        <briefdescription>
<para>The offset from which to read. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2604" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2604" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1abf3b4ab7ad6409ada96f910c11ffa793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>()</argsstring>
        <name>async_data_op_req</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2607" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2607" bodyend="2607"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a548cf2e2303cd68df22f0f5d9372ad9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type>const <ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2609" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2609" bodyend="2609"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a8432b9d6c57660f4c9c29958b61566d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) noexcept</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2611" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2611" bodyend="2611"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1ad3a95bc2e87e1303fde0065a3bf934e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(const async_data_op_req &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2613" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2613" bodyend="2613"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa6ded9695af9e66e507366777a66eb54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;</type>
        <definition>async_data_op_req&amp; boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::operator=</definition>
        <argsstring>(async_data_op_req &amp;&amp;o) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__data__op__req" kindref="compound">async_data_op_req</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2615" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2615" bodyend="2615"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a443e5b3eb85546383469ca547eb81496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;::async_data_op_req</definition>
        <argsstring>(async_io_op _precondition, std::basic_string&lt; C, T, A &gt; &amp;v, off_t _where)</argsstring>
        <name>async_data_op_req</name>
        <param>
          <type><ref refid="structboost_1_1afio_1_1async__io__op" kindref="compound">async_io_op</ref></type>
          <declname>_precondition</declname>
        </param>
        <param>
          <type>std::basic_string&lt; C, T, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>_where</declname>
        </param>
        <briefdescription>
<para>Constructs an instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_precondition</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional precondition for this operation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to memory or reference to object into which to read or write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_where</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset at which to transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2617" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2617" bodyend="2617"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1aede4076a13fe0b744667334f2127e2e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::afio::detail::async_data_op_req_impl&lt; false &gt;::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
<para>Validates contents for correctness. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if contents are correct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2178" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2177" bodyend="2190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A convenience bundle of precondition, data and where for reading into a `std::basic_string&lt;C, T, A&gt;`. Data <bold>MUST</bold> stay around until the operation completes. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>class C</parametername>
</parameternamelist>
<parameterdescription>
<para>Any character type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class T</parametername>
</parameternamelist>
<parameterdescription>
<para>Character traits type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class A</parametername>
</parameternamelist>
<parameterdescription>
<para>Any STL allocator </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="78">
        <label>boost::afio::detail::async_data_op_req_impl&lt; false &gt;</label>
        <link refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4"/>
      </node>
      <node id="77">
        <label>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</label>
        <link refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="82">
        <label>boost::afio::async_io_op</label>
        <link refid="structboost_1_1afio_1_1async__io__op"/>
        <childnode refid="83" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>boost::afio::async_file_io_dispatcher_base</label>
        <link refid="classboost_1_1afio_1_1async__file__io__dispatcher__base"/>
      </node>
      <node id="80">
        <label>boost::afio::detail::async_data_op_req_impl&lt; false &gt;</label>
        <link refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4"/>
        <childnode refid="81" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</label>
        <link refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>buffers</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>precondition</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>std::vector&lt; asio::mutable_buffer &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" line="2597" bodyfile="/home/jenkins-slave/workspace/Boost.AFIO Build Documentation/boost-local/libs/afio/include/boost/afio/afio.hpp" bodystart="2596" bodyend="2618"/>
    <listofallmembers>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1abf3b4ab7ad6409ada96f910c11ffa793" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a548cf2e2303cd68df22f0f5d9372ad9c" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a8432b9d6c57660f4c9c29958b61566d7" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a443e5b3eb85546383469ca547eb81496" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a6254251003f2789fdaa0a68f69752955" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1abd9a9356e74c66dbf2e5a9668f3da464" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a74c8488b866a7baec1b9585020e96a32" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1ae981a8e7b643b718a60c85a817e09593" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1ab76aaade08201c661d3341e18ab5d806" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a10b6962eeb176b008847f16245922115" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a21b9403dd0eaae3386c88b441572c4ae" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>async_data_op_req_impl</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a328f95dd2fcb7a270e538bb1dfb7e8ec" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>buffers</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1ad3a95bc2e87e1303fde0065a3bf934e0" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa6ded9695af9e66e507366777a66eb54" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a597b07864ae6c22b02dfd083a0e4e779" prot="public" virt="non-virtual" ambiguityscope="boost::afio::detail::async_data_op_req_impl&lt; false &gt;::"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1a96cac690389490ea7e19e92c12f775db" prot="public" virt="non-virtual" ambiguityscope="boost::afio::detail::async_data_op_req_impl&lt; false &gt;::"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>operator=</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1aa57bec75ffaa60187beb806fd9f6cd7b" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>precondition</name></member>
      <member refid="classboost_1_1afio_1_1detail_1_1async__data__op__req__impl_3_01false_01_4_1aede4076a13fe0b744667334f2127e2e8" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>validate</name></member>
      <member refid="structboost_1_1afio_1_1async__data__op__req_3_01std_1_1basic__string_3_01_c_00_01_t_00_01_a_01_4_01_4_1a991f001fb9c1a19a9804c51f6896afab" prot="public" virt="non-virtual"><scope>boost::afio::async_data_op_req&lt; std::basic_string&lt; C, T, A &gt; &gt;</scope><name>where</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
