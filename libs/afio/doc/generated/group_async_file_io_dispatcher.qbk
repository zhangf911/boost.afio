[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__async__file__io__dispatcher.xml]
[section:make_async_file_io_dispatcher make_async_file_io_dispatcher]

'''<indexterm><primary>make_async_file_io_dispatcher</primary></indexterm>'''
Instatiates the best available async\u005ffile\u005fio\u005fdispatcher implementation for this system. 

[heading Description]
Note that the number of threads in the threadpool supplied is the maximum non-async op queue depth (e.g. file opens, closes etc.). For fast SSDs, there isn't much gain after eight-sixteen threads, so the process threadpool is set to eight by default. For slow hard drives, or worse, SANs, a queue depth of 64 or higher might deliver significant benefits.

[heading Synopsis]
``BOOST_AFIO_DECL std::shared_ptr<async_file_io_dispatcher_base> make_async_file_io_dispatcher(std::shared_ptr< thread_source > threadpool = process_threadpool(), file_flags flagsforce = file_flags::None, file_flags flagsmask = file_flags::None)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[std::shared_ptr< thread_source >] [] [threadpool] [The threadpool instance to use for asynchronous dispatch. ]]
[[file_flags] [] [flagsforce] [The flags to bitwise OR with any opened file flags. Used to force on certain flags. ]]
[[file_flags] [] [flagsmask] [The flags to bitwise AND with any opened file flags. Used to force off certain flags.]]
]


[heading Returns]
A shared\u005fptr to the best available async\u005ffile\u005fio\u005fdispatcher implementation for this system. 

[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Example]
[call_example]


[endsect]

