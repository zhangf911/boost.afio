[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__async__file__io__dispatcher__base____barrier.xml]
[section:barrier barrier (batch)]

'''<indexterm><primary>barrier</primary></indexterm>'''
Schedule an asynchronous synchronisation of preceding operations. 

[heading Description]
If you perform many asynchronous operations of unequal duration but wish to schedule one of more operations to occur only after [*all] of those operations have completed, this is the correct function to use. The returned batch of ops exactly match the input batch of ops (including their exception states), but they will only complete when the last of the input batch of ops completes.

[heading Synopsis]
``std::vector<async_io_op> async_file_io_dispatcher_base::barrier(const std::vector< async_io_op > & ops)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[const std::vector< async_io_op > &] [] [ops] [A batch of op handles.]]
]


[heading Returns]
A batch of op handles. 

[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]Amortised O(N) to dispatch. Amortised O(N) to complete.
[heading Exception Model]See detailed description above.
[heading Example][barrier_example]


[endsect]

